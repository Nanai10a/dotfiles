# dein本体.
[[plugins]]
repo = "Shougo/dein.vim"

# よくわかんないけどdeinの導入時に居たやつ.
# FIXME: なにこれ
[[plugins]]
repo = "roxma/nvim-yarp"

[[plugins]]
repo = "roxma/vim-hub-neovim-rpc"


# fzfという検索ツールをvimから使えるようにしたもの.
# `:Files`が主なコマンドで, 検索windowと選択中のfileのpreviewをしてくれる.
[[plugins]]
repo = "junegunn/fzf.vim"

# fzf本体も必要なので依存として導入.
[[plugins]]
repo = "junegunn/fzf"
build_on = """
./install -all
"""


# mdの自動更新機能付きpreviwer.
# - g:previm_open_cmd でブラウザを開くsh_commandを指定.
# `:PrevimOpen`で起動.
[[plugins]]
repo = "previm/previm"


# helplang=jaを対応させるtranslateな奴です.
# そうでなくとも環境がjaならjaで表示されます.
[[plugins]]
repo = "vim-jp/vimdoc-ja"


# `[regex]`をhighlightしてくれます.
# regexのmatch確認がその場で出来ます.
[[plugins]]
repo = "markonm/traces.vim"


# 選択範囲をGoogle Translateにぶちこんでくれます.
# Visual Modeで範囲を選択し, `:Translate`で翻訳です.
[[plugins]]
repo = "skanehira/translate.vim"


# Themeでいい感じのやつ.
# 設定が容易なのが特徴, Themeはterminalに合わせてPaperColor darkにする.
[[plugins]]
repo = "itchyny/lightline.vim"
hook_add = """
    let g:lightline = { "colorscheme": "PaperColor_dark" }
    set noshowmode
"""

# Ctrl+c(keybindはhookで指定)でモダンなdir-treeを表示してくれる.
[[plugins]]
repo = "scrooloose/nerdtree"
hook_add = """
    let NERDTreeShowHidden = 1
    nnoremap <C-a> :NERDTreeFind<CR>:vertical res 30<CR>
"""


# gitのdiffを可視化してくれるようにする.
[[plugins]]
repo = "airblade/vim-gitgutter"
hook_add = """
    set signcolumn = yes
    let g:gitgutter_async = 1
    let g:gitgutter_sign_modified = "rw"

    highlight GitGutterAdd ctermfg=green
    highlight GitGutterChange ctermfg=yellow
    highlight GitGutterDelete ctermfg=red
    highlight GitGutterChangeDelete ctermfg=yellow
"""


# Visual Modeで選択した範囲を,
# Ctrl+/ * 2times (FIXME: なんで2回押すの?) でcommentoutできるようにする.
[[plugins]]
repo = "tomtom/tcomment_vim"
hook_add = """
    vnoremap <C-/> :'<,'>TComment<CR>
"""


# *rainbow brackets*
[[plugins]]
repo = "luochen1990/rainbow"
hook_add = """
    let g:rainbow_active = 1
"""


# <>に対して</>を保管してくれる奴.
# `>`をshotcutにすることで<>入力時に</>が保管される.
[[plugins]]
repo = "alvan/vim-closetag"
on_ft = ["html", "xhtml", "javascript", "typescript", "javascript.jsx", "typescript.tsx"]
hook_add = """
    let g:closetag_filenames = ".html"
    let g:closetag_xhtml_filenames = "*.jsx,*.tsx,*.vue"
    let g:closetag_filetypes = "html"
    let g:closetag_xhtml_filetypes = "jsx,tsx,javascript.jsx,typescript.tsx,vue"
    let g:closetag_emptyTags_caseSensitive = 1
    let g:closetag_shortcut = ">"
"""


# アイコンを表示してくれる.
[[plugins]]
repo = "ryanoasis/vim-devicons"


# lsp-client.
# 補完や構文チェックをしてくれる.
[[plugins]]
repo = "neoclide/coc.nvim"
hook_add = """
    set hidden
    set updatetime=300
    set shortmess += c
    
    inoremap <silent><expr> <TAB>
      \ pumvisible() ? "\<C-n>" :
      \ <SID>check_back_space() ? "\<TAB>" :
      \ coc#refresh()
    inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<C-h>"

    function! s:check_back_space() abort
        let col = col('.') - 1
        return !col || getline('.')[col - 1]  =~# '\s'
    endfunction
    
    inoremap <silent><expr> <c-space> coc#reflesh()

    inoremap <silent><expr> <cr> pumvisible() ? coc#_select_confirm()
                              \: "\<C-g>u\<CR>\<c-r>=coc#on_enter()\<CR>"

    nmap <silent> [g <Plug>(coc-diagnostic-prev)
    nmap <silent> ]g <Plug>(coc-diagnostic-next)

    nnoremap <space><space> :<C-u>CocList<CR>
    nnoremap <space>h :<C-u>call CocAction("doHover")<CR>
    nnoremap <space>df :<C-u>call CocActionAsync("jumpDefinition")<CR>
    nnoremap <space>tdf <Plug>(coc-type-definition)
    nnoremap <space>rf :<C-u>call CocActionAsync("jumpReferences")<CR>
    nnoremap <space>rn :<C-u>call CocActionAsync("rename")<CR>
    nnoremap <space>fmt :<C-u>call CocActionAsync("format")<CR>

    autocmd CursorHold * silent call CocActionAsync('highlight')
"""

# rustの公式vim-plugin.
# rustfmtとかが入っている.
[[plugins]]
repo = "rust-lang/rust.vim"
hook_add = """
    let g:rustfmt_autosave = 1
"""


# rustのls(rls)
[[plugins]]
repo = "neoclide/coc-rls"

# Typescriptのls？(未検証)
[[plugins]]
repo = "leafgarland/typescript-vim"

# Golangの公式ls
[[plugins]]
repo = "golang/gopls"

# Golangのls(静的解析結果をリアルタイムで見れるらしい)
[[plugins]]
repo = "nametake/golangci-lint-langserver"

